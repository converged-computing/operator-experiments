apiVersion: v1
kind: Namespace
metadata:
  labels:
    app.kubernetes.io/component: manager
    app.kubernetes.io/created-by: test
    app.kubernetes.io/instance: system
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: namespace
    app.kubernetes.io/part-of: test
    control-plane: controller-manager
  name: metrics-system
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.11.1
  creationTimestamp: null
  name: metricsets.flux-framework.org
spec:
  group: flux-framework.org
  names:
    kind: MetricSet
    listKind: MetricSetList
    plural: metricsets
    singular: metricset
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: MetricSet is the Schema for the metrics API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: MetricSpec defines the desired state of Metric
            properties:
              application:
                description: For metrics that require an application, we need a container and name (for now)
                properties:
                  attributes:
                    description: Container Spec has attributes for the container
                    properties:
                      securityContext:
                        description: Security context for the pod
                        properties:
                          privileged:
                            type: boolean
                        required:
                        - privileged
                        type: object
                    type: object
                  command:
                    description: command to execute and monitor (if consistent across pods)
                    type: string
                  entrypoint:
                    description: Entrypoint of container, if different from command
                    type: string
                  image:
                    type: string
                  pullSecret:
                    description: A pull secret for the application container
                    type: string
                  resources:
                    description: Resources include limits and requests for the application
                    properties:
                      limits:
                        additionalProperties:
                          anyOf:
                          - type: integer
                          - type: string
                          x-kubernetes-int-or-string: true
                        type: object
                      requests:
                        additionalProperties:
                          anyOf:
                          - type: integer
                          - type: string
                          x-kubernetes-int-or-string: true
                        type: object
                    type: object
                  volumes:
                    additionalProperties:
                      description: 'A Volume should correspond with an existing volume, either: config map, secret, or claim name.'
                      properties:
                        claimName:
                          description: Claim name if the existing volume is a PVC
                          type: string
                        configMapName:
                          description: Config map name if the existing volume is a config map You should also define items if you are using this
                          type: string
                        emptyVol:
                          default: false
                          description: EmptyVol if true generates an empty volume at the path
                          type: boolean
                        hostPath:
                          description: Hostpath volume on the host to bind to path
                          type: string
                        items:
                          additionalProperties:
                            type: string
                          description: Items (key and paths) for the config map
                          type: object
                        path:
                          description: Path and claim name are always required if a secret isn't defined
                          type: string
                        readOnly:
                          default: false
                          type: boolean
                        secretName:
                          description: An existing secret
                          type: string
                      type: object
                    description: Existing Volumes for the application
                    type: object
                  workingDir:
                    description: Working Directory
                    type: string
                required:
                - command
                - image
                type: object
              completions:
                description: Single pod completion, meaning the jobspec completions is unset and we only require one main completion
                format: int32
                type: integer
              deadlineSeconds:
                default: 31500000
                description: Should the job be limited to a particular number of seconds? Approximately one year. This cannot be zero or job won't start
                format: int64
                type: integer
              dontSetFQDN:
                description: Don't set JobSet FQDN
                type: boolean
              logging:
                description: Logging spec, preparing for other kinds of logging Right now we just include an interactive option
                properties:
                  interactive:
                    description: Don't allow the application, metric, or storage test to finish This adds sleep infinity at the end to allow for interactive mode.
                    type: boolean
                type: object
              metrics:
                description: The name of the metric (that will be associated with a flavor like storage)
                items:
                  description: The difference between benchmark and metric is subtle. A metric is more a measurment, and the benchmark is the comparison value. I don't have strong opinions but I think we are doing more measurment not necessarily with benchmarks
                  properties:
                    attributes:
                      description: Container Spec has attributes for the container
                      properties:
                        securityContext:
                          description: Security context for the pod
                          properties:
                            privileged:
                              type: boolean
                          required:
                          - privileged
                          type: object
                      type: object
                    listOptions:
                      additionalProperties:
                        items:
                          anyOf:
                          - type: integer
                          - type: string
                          x-kubernetes-int-or-string: true
                        type: array
                      description: Metric List Options Metric specific options
                      type: object
                    mapOptions:
                      additionalProperties:
                        additionalProperties:
                          anyOf:
                          - type: integer
                          - type: string
                          x-kubernetes-int-or-string: true
                        type: object
                      description: Metric Map Options
                      type: object
                    name:
                      type: string
                    options:
                      additionalProperties:
                        anyOf:
                        - type: integer
                        - type: string
                        x-kubernetes-int-or-string: true
                      description: Metric Options Metric specific options
                      type: object
                    resources:
                      description: Resources include limits and requests for the metric container
                      properties:
                        limits:
                          additionalProperties:
                            anyOf:
                            - type: integer
                            - type: string
                            x-kubernetes-int-or-string: true
                          type: object
                        requests:
                          additionalProperties:
                            anyOf:
                            - type: integer
                            - type: string
                            x-kubernetes-int-or-string: true
                          type: object
                      type: object
                  required:
                  - name
                  type: object
                type: array
              pod:
                description: Pod spec for the application, standalone, or storage metrics
                properties:
                  nodeSelector:
                    additionalProperties:
                      type: string
                    description: NodeSelector labels
                    type: object
                  serviceAccountName:
                    description: name of service account to associate with pod
                    type: string
                type: object
              pods:
                default: 1
                description: Parallelism (e.g., pods)
                format: int32
                type: integer
              resources:
                additionalProperties:
                  anyOf:
                  - type: integer
                  - type: string
                  x-kubernetes-int-or-string: true
                description: Resources include limits and requests for each pod (that include a JobSet)
                type: object
              serviceName:
                default: ms
                description: Service name for the JobSet (MetricsSet) cluster network
                type: string
              storage:
                description: A storage setup that we want to measure performance for. and binding to storage metrics
                properties:
                  commands:
                    description: Commands to run (pre is supported to make bind)
                    properties:
                      post:
                        description: post happens at end (after collection end)
                        type: string
                      pre:
                        description: pre command happens at start (before anything else)
                        type: string
                      prefix:
                        description: Command prefix to put in front of a metric main command (not applicable for all)
                        type: string
                    type: object
                  volume:
                    description: Volume type to test (not all storage interfaces require one explicitly)
                    properties:
                      claimName:
                        description: Claim name if the existing volume is a PVC
                        type: string
                      configMapName:
                        description: Config map name if the existing volume is a config map You should also define items if you are using this
                        type: string
                      emptyVol:
                        default: false
                        description: EmptyVol if true generates an empty volume at the path
                        type: boolean
                      hostPath:
                        description: Hostpath volume on the host to bind to path
                        type: string
                      items:
                        additionalProperties:
                          type: string
                        description: Items (key and paths) for the config map
                        type: object
                      path:
                        description: Path and claim name are always required if a secret isn't defined
                        type: string
                      readOnly:
                        default: false
                        type: boolean
                      secretName:
                        description: An existing secret
                        type: string
                    type: object
                type: object
            type: object
          status:
            description: MetricStatus defines the observed state of Metric
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
---
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    app.kubernetes.io/component: rbac
    app.kubernetes.io/created-by: test
    app.kubernetes.io/instance: controller-manager
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: serviceaccount
    app.kubernetes.io/part-of: test
  name: metrics-controller-manager
  namespace: metrics-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  labels:
    app.kubernetes.io/component: rbac
    app.kubernetes.io/created-by: test
    app.kubernetes.io/instance: leader-election-role
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: role
    app.kubernetes.io/part-of: test
  name: metrics-leader-election-role
  namespace: metrics-system
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
  - patch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  creationTimestamp: null
  name: metrics-manager-role
rules:
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
  - update
  - watch
- apiGroups:
  - batch
  resources:
  - jobs
  verbs:
  - create
  - delete
  - exec
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - batch
  resources:
  - jobs/status
  verbs:
  - create
  - delete
  - exec
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - ""
  resources:
  - ""
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - ""
  resources:
  - batch
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
  - patch
- apiGroups:
  - ""
  resources:
  - jobs
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - ""
  resources:
  - networks
  verbs:
  - create
  - patch
- apiGroups:
  - ""
  resources:
  - persistentvolumeclaims
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - ""
  resources:
  - persistentvolumes
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - ""
  resources:
  - pods
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - ""
  resources:
  - pods/exec
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - ""
  resources:
  - pods/log
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - ""
  resources:
  - secrets
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - ""
  resources:
  - services
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - ""
  resources:
  - statefulsets
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - flux-framework.org
  resources:
  - metricsets
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - flux-framework.org
  resources:
  - metricsets/finalizers
  verbs:
  - update
- apiGroups:
  - flux-framework.org
  resources:
  - metricsets/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - jobset.x-k8s.io
  resources:
  - jobsets
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - jobset.x-k8s.io
  resources:
  - jobsets/finalizers
  verbs:
  - update
- apiGroups:
  - jobset.x-k8s.io
  resources:
  - jobsets/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - networking.k8s.io
  resources:
  - ingresses
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/component: kube-rbac-proxy
    app.kubernetes.io/created-by: test
    app.kubernetes.io/instance: metrics-reader
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: clusterrole
    app.kubernetes.io/part-of: test
  name: metrics-metrics-reader
rules:
- nonResourceURLs:
  - /metrics
  verbs:
  - get
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/component: kube-rbac-proxy
    app.kubernetes.io/created-by: test
    app.kubernetes.io/instance: proxy-role
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: clusterrole
    app.kubernetes.io/part-of: test
  name: metrics-proxy-role
rules:
- apiGroups:
  - authentication.k8s.io
  resources:
  - tokenreviews
  verbs:
  - create
- apiGroups:
  - authorization.k8s.io
  resources:
  - subjectaccessreviews
  verbs:
  - create
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  labels:
    app.kubernetes.io/component: rbac
    app.kubernetes.io/created-by: test
    app.kubernetes.io/instance: leader-election-rolebinding
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: rolebinding
    app.kubernetes.io/part-of: test
  name: metrics-leader-election-rolebinding
  namespace: metrics-system
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: metrics-leader-election-role
subjects:
- kind: ServiceAccount
  name: metrics-controller-manager
  namespace: metrics-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    app.kubernetes.io/component: rbac
    app.kubernetes.io/created-by: test
    app.kubernetes.io/instance: manager-rolebinding
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: clusterrolebinding
    app.kubernetes.io/part-of: test
  name: metrics-manager-rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: metrics-manager-role
subjects:
- kind: ServiceAccount
  name: metrics-controller-manager
  namespace: metrics-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    app.kubernetes.io/component: kube-rbac-proxy
    app.kubernetes.io/created-by: test
    app.kubernetes.io/instance: proxy-rolebinding
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: clusterrolebinding
    app.kubernetes.io/part-of: test
  name: metrics-proxy-rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: metrics-proxy-role
subjects:
- kind: ServiceAccount
  name: metrics-controller-manager
  namespace: metrics-system
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/component: kube-rbac-proxy
    app.kubernetes.io/created-by: test
    app.kubernetes.io/instance: controller-manager-metrics-service
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: service
    app.kubernetes.io/part-of: test
    control-plane: controller-manager
  name: metrics-controller-manager-metrics-service
  namespace: metrics-system
spec:
  ports:
  - name: https
    port: 8443
    protocol: TCP
    targetPort: https
  selector:
    control-plane: controller-manager
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/component: manager
    app.kubernetes.io/created-by: test
    app.kubernetes.io/instance: controller-manager
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: deployment
    app.kubernetes.io/part-of: test
    control-plane: controller-manager
  name: metrics-controller-manager
  namespace: metrics-system
spec:
  replicas: 1
  selector:
    matchLabels:
      control-plane: controller-manager
  template:
    metadata:
      annotations:
        kubectl.kubernetes.io/default-container: manager
      labels:
        control-plane: controller-manager
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: kubernetes.io/arch
                operator: In
                values:
                - amd64
                - arm64
                - ppc64le
                - s390x
              - key: kubernetes.io/os
                operator: In
                values:
                - linux
      containers:
      - args:
        - --secure-listen-address=0.0.0.0:8443
        - --upstream=http://127.0.0.1:8080/
        - --logtostderr=true
        - --v=0
        image: gcr.io/kubebuilder/kube-rbac-proxy:v0.13.1
        name: kube-rbac-proxy
        ports:
        - containerPort: 8443
          name: https
          protocol: TCP
        resources:
          limits:
            cpu: 500m
            memory: 128Mi
          requests:
            cpu: 5m
            memory: 64Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
      - args:
        - --health-probe-bind-address=:8081
        - --metrics-bind-address=127.0.0.1:8080
        - --leader-elect
        command:
        - /manager
        image: ghcr.io/converged-computing/metrics-operator:latest@sha256:d58d2d719bac4c865232c310b9a85b0ba9b854980efbb1eb253c215bbe7221cf
        imagePullPolicy: Always
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8081
          initialDelaySeconds: 15
          periodSeconds: 20
        name: manager
        readinessProbe:
          httpGet:
            path: /readyz
            port: 8081
          initialDelaySeconds: 5
          periodSeconds: 10
        resources:
          limits:
            cpu: 500m
            memory: 128Mi
          requests:
            cpu: 10m
            memory: 64Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
      securityContext:
        runAsNonRoot: true
      serviceAccountName: metrics-controller-manager
      terminationGracePeriodSeconds: 10
